{"ast":null,"code":"var _jsxFileName = \"D:\\\\__My_crafts\\\\Algorithms For Coding Test\\\\Other Knowledges for interview\\\\Next\\\\CloneTwitter\\\\prepare\\\\front\\\\components\\\\AppLayout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// 페이지가 아닌 컴포넌트는 components 폴더에! (이건 필수는 아님)\n// 넥스트에는 router 기능과 hot-loader 기능까지 포함되어 있어서 Link는 그냥 next에서 가져오면 되고\n// 저장하면 알아서 개발 서버가 핫 리로딩된다\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport { Input, Menu, Row, Col } from \"antd\";\n\nconst AppLayout = ({\n  children\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(Menu, {\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"\\uD504\\uB85C\\uD544\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Search, {\n    enterButton: true,\n    style: {\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  })), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"\\uC67C\\uCABD \\uBA54\\uB274\"), __jsx(Col, {\n    xs: 24,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, children), __jsx(Col, {\n    xs: 24,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"\\uC624\\uB978\\uCABD \\uBA54\\uB274\")));\n}; // 타입은 노드인데, 여기서 노드는 return 부에 들어갈 수 있는 모든 것을 의미한다.\n// 타입 스크립트 대용인 듯\n\n\nAppLayout.prototype = {\n  children: PropTypes.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"sources":["D:/__My_crafts/Algorithms For Coding Test/Other Knowledges for interview/Next/CloneTwitter/prepare/front/components/AppLayout.js"],"names":["PropTypes","Link","Input","Menu","Row","Col","AppLayout","children","verticalAlign","prototype","node","isRequired"],"mappings":";;;AAAA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,MAAtC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,CADF,EAME,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,CANF,EAWE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,EAcE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,CAdF,CADF,EAsBE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCANF,EASE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CATF,EAYE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAZF,CAtBF,CADF;AAyCD,CA1CD,C,CA4CA;AACA;;;AACAD,SAAS,CAACG,SAAV,GAAsB;AACpBF,EAAAA,QAAQ,EAAEP,SAAS,CAACU,IAAV,CAAeC;AADL,CAAtB;AAIA,eAAeL,SAAf","sourcesContent":["// 페이지가 아닌 컴포넌트는 components 폴더에! (이건 필수는 아님)\r\n// 넥스트에는 router 기능과 hot-loader 기능까지 포함되어 있어서 Link는 그냥 next에서 가져오면 되고\r\n// 저장하면 알아서 개발 서버가 핫 리로딩된다\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport { Input, Menu, Row, Col } from \"antd\";\r\n\r\nconst AppLayout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item>\r\n          <Link href=\"/\">\r\n            <a>노드버드</a>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Link href=\"/profile\">\r\n            <a>프로필</a>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Input.Search enterButton style={{ verticalAlign: \"middle\" }} />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Link href=\"/signup\">\r\n            <a>회원가입</a>\r\n          </Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n      {/* 거터는 컬럼들 사이의 간격이다. Col 양쪽에 4px씩 패딩이 생긴다 */}\r\n      <Row gutter={8}>\r\n        {/*\r\n        xs는 모바일, sm은 태블릿, md는 작은 데스크탑이다.\r\n        아래의 의미는, Col 하나가 모바일 화면을 24/24만큼 사용하고, 작은 데스크탑에서는 6/24를 사용한다는 뜻 \r\n        아래 친구는, 모바일에서는 Col 하나가 화면 하나를 차지하여 세 페이지가 나올 것이고, 데스크탑에서는 25% 50% 25%로 나눠서 가져갈 것이다.\r\n        */}\r\n        <Col xs={24} md={6}>\r\n          왼쪽 메뉴\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          {children}\r\n        </Col>\r\n        <Col xs={24} md={6}>\r\n          오른쪽 메뉴\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 타입은 노드인데, 여기서 노드는 return 부에 들어갈 수 있는 모든 것을 의미한다.\r\n// 타입 스크립트 대용인 듯\r\nAppLayout.prototype = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default AppLayout;\r\n"]},"metadata":{},"sourceType":"module"}