{"ast":null,"code":"// for next-redux-wrapper\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddelware from \"redux-thunk\";\nimport reducer from \"../reducers\";\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunkMiddelware]; // 미들웨어: 리덕스의 기능을 향상시켜주는 친구\n  // -> thunk는 리덕스가 비동기 처리를 할 수 있도록 해 줌 (호출할 때 디스패치 => 하나의 액션에서 여러번 디스패치가 가능해진다.)\n  // 즉, 하나의 비동기 요청 안에 여러 개의 동기 액션이 가능\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["D:/__My_crafts/Algorithms For Coding Test/Other Knowledges for interview/Next/CloneTwitter/prepare/front/store/configureStore.js"],"names":["applyMiddleware","compose","createStore","createWrapper","composeWithDevTools","thunkMiddelware","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,CAACH,eAAD,CAApB,CAD2B,CAE3B;AACA;AACA;;AACA,MAAMI,QAAQ,GACZ,QACIR,OAAO,CAACD,eAAe,MAAf,SAAmBQ,WAAnB,CAAD,CADX,GAEIJ,mBAAmB,CAACJ,eAAe,MAAf,SAAmBQ,WAAnB,CAAD,CAHzB;AAIA,MAAME,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUG,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAXD;;AAaA,IAAMC,OAAO,GAAGR,aAAa,CAACI,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["// for next-redux-wrapper\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunkMiddelware from \"redux-thunk\";\r\nimport reducer from \"../reducers\";\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [thunkMiddelware];\r\n  // 미들웨어: 리덕스의 기능을 향상시켜주는 친구\r\n  // -> thunk는 리덕스가 비동기 처리를 할 수 있도록 해 줌 (호출할 때 디스패치 => 하나의 액션에서 여러번 디스패치가 가능해진다.)\r\n  // 즉, 하나의 비동기 요청 안에 여러 개의 동기 액션이 가능\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}