{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  logInLoading: false,\n  // 로그인 시도 중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그인 시도 중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 로그인 시도 중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 로그인 시도 중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport var CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport var CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport var FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport var FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport var FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport var UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport var UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport var UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: \"윈카우\",\n    id: data.email,\n    Posts: [{\n      id: \"asd\"\n    }],\n    Followings: [{\n      nickname: \"부기초\"\n    }],\n    Followers: [{\n      nickname: \"부기초\"\n    }]\n  });\n}; // action creater: 원래 액션은 객체인데 객체로 만들면 동적으로 값을 바꾸기 힘들어서 객체를 뱉는 함수를 만든 것\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// thunk가 해 주는 일이 이것이다.(비동기 액션을 가능하게 해 줌, 한 번에 디스패치를 여러 번 할 수 있게 해 준다.)\n// saga를 쓰면 조금 더 많은 것을 해 준다. 딜레이(몇 초 뒤에 디스패치가 가능하게 한다든지...)\n// 그래서 간단한 어플을 만들 때는 thunk를 써서 비동기 액션만 사용 가능하게 해도 되는데, 그렇지 않으면 saga로 다양한 기능을 지원받으면 좋음\n// export const loginAction = (data) => {\n//   return (dispatch, getState) => {\n//     const state = getState();\n//     dispatch(loginRequestAction());\n//     axios\n//       .post(\"/api/login\")\n//       .then((res) => dispatch(loginSuccessAction(res.data)))\n//       .catch((err) => dispatch(loginFailureAction(err)));\n//   };\n// };\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        // console.log(\"reducer logged in\");\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: true,\n          logInError: null,\n          logInDone: false,\n          me: action.data\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        console.log(\"더미유저 체크\", dummyUser(action.data));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: false,\n          logInDone: true,\n          me: dummyUser(action.data)\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        // console.log(\"logged in\");\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: false,\n          logInError: action.error,\n          me: action.data\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: true,\n          logOutError: null,\n          logOutDone: false\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: false,\n          logOutDone: true,\n          me: null\n        });\n      }\n\n    case LOG_OUT_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: false,\n          logOutError: action.error\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpLoading: true,\n          signUpError: null,\n          signUpDone: false\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpLoading: false,\n          signUpDone: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpLoading: false,\n          signUpError: action.error\n        });\n      }\n\n    case CHANGE_NICKNAME_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: true,\n          changeNicknameError: null,\n          changeNicknameDone: false\n        });\n      }\n\n    case CHANGE_NICKNAME_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameDone: true\n        });\n      }\n\n    case CHANGE_NICKNAME_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameError: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/__My_crafts/Algorithms For Coding Test/Other Knowledges for interview/Next/CloneTwitter/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","dummyUser","data","nickname","id","email","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","console","log","error"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  logInLoading: false, // 로그인 시도 중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그인 시도 중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, // 로그인 시도 중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  changeNicknameLoading: false, // 로그인 시도 중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: \"윈카우\",\r\n  id: data.email,\r\n  Posts: [{ id: \"asd\" }],\r\n  Followings: [{ nickname: \"부기초\" }],\r\n  Followers: [{ nickname: \"부기초\" }],\r\n});\r\n\r\n// action creater: 원래 액션은 객체인데 객체로 만들면 동적으로 값을 바꾸기 힘들어서 객체를 뱉는 함수를 만든 것\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// thunk가 해 주는 일이 이것이다.(비동기 액션을 가능하게 해 줌, 한 번에 디스패치를 여러 번 할 수 있게 해 준다.)\r\n// saga를 쓰면 조금 더 많은 것을 해 준다. 딜레이(몇 초 뒤에 디스패치가 가능하게 한다든지...)\r\n// 그래서 간단한 어플을 만들 때는 thunk를 써서 비동기 액션만 사용 가능하게 해도 되는데, 그렇지 않으면 saga로 다양한 기능을 지원받으면 좋음\r\n// export const loginAction = (data) => {\r\n//   return (dispatch, getState) => {\r\n//     const state = getState();\r\n//     dispatch(loginRequestAction());\r\n//     axios\r\n//       .post(\"/api/login\")\r\n//       .then((res) => dispatch(loginSuccessAction(res.data)))\r\n//       .catch((err) => dispatch(loginFailureAction(err)));\r\n//   };\r\n// };\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nexport const loginRequestAction = (data) => {\r\n  return { type: LOG_IN_REQUEST, data };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return { type: LOG_OUT_REQUEST };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      // console.log(\"reducer logged in\");\r\n      return {\r\n        ...state,\r\n        logInLoading: true,\r\n        logInError: null,\r\n        logInDone: false,\r\n        me: action.data,\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      console.log(\"더미유저 체크\", dummyUser(action.data));\r\n      return {\r\n        ...state,\r\n        logInLoading: false,\r\n        logInDone: true,\r\n        me: dummyUser(action.data),\r\n      };\r\n    }\r\n    case LOG_IN_FAILURE: {\r\n      // console.log(\"logged in\");\r\n      return {\r\n        ...state,\r\n        logInLoading: false,\r\n        logInError: action.error,\r\n        me: action.data,\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        logOutLoading: true,\r\n        logOutError: null,\r\n        logOutDone: false,\r\n      };\r\n    }\r\n    case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutDone: true,\r\n        me: null,\r\n      };\r\n    }\r\n    case LOG_OUT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutError: action.error,\r\n      };\r\n    }\r\n    case SIGN_UP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        signUpLoading: true,\r\n        signUpError: null,\r\n        signUpDone: false,\r\n      };\r\n    }\r\n    case SIGN_UP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpDone: true,\r\n      };\r\n    }\r\n    case SIGN_UP_FAILURE: {\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpError: action.error,\r\n      };\r\n    }\r\n    case CHANGE_NICKNAME_REQUEST: {\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: true,\r\n        changeNicknameError: null,\r\n        changeNicknameDone: false,\r\n      };\r\n    }\r\n    case CHANGE_NICKNAME_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameDone: true,\r\n      };\r\n    }\r\n    case CHANGE_NICKNAME_FAILURE: {\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameError: action.error,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}