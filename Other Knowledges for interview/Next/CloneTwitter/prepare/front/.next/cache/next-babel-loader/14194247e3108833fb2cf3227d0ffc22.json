{"ast":null,"code":"var _jsxFileName = \"D:\\\\__My_crafts\\\\Algorithms For Coding Test\\\\Other Knowledges for interview\\\\Next\\\\CloneTwitter\\\\prepare\\\\front\\\\components\\\\imagesZoom\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slick from \"react-slick\"; // 이렇게 폴더 안에 index.js를 만드는 이유는?\n// react-slick 캐루셀(이미지 슬라이더) 중 가장 인기 있는 컴포넌트이다.\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(\"button\", {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Slick, {\n    initialSlide: 0,\n    afterChange: slide => setCurrentSlide(slide),\n    infinite: true,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, images.map(v => __jsx(\"div\", {\n    key: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: v.src,\n    alt: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["D:/__My_crafts/Algorithms For Coding Test/Other Knowledges for interview/Next/CloneTwitter/prepare/front/components/imagesZoom/index.js"],"names":["React","PropTypes","Slick","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","useState","slide","map","v","src","propTypes","arrayOf","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;AACA;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAC1C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,CAAD,CAAhD;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,YAAY,EAAE,CADhB;AAEE,IAAA,WAAW,EAAGI,KAAD,IAAWF,eAAe,CAACE,KAAD,CAFzC;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,MAAM,EAAE,KAJV;AAKE,IAAA,YAAY,EAAE,CALhB;AAME,IAAA,cAAc,EAAE,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGL,MAAM,CAACM,GAAP,CAAYC,CAAD,IACV;AAAK,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,CAAC,CAACC,GAAZ;AAAiB,IAAA,GAAG,EAAED,CAAC,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CARH,CADF,CALF,CADF;AAwBD,CA1BD;;AA4BAT,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,MAAM,EAAEH,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,MAA5B,EAAoCC;AADvB,CAAvB;AAIA,eAAeb,UAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slick from \"react-slick\";\r\n// 이렇게 폴더 안에 index.js를 만드는 이유는?\r\n// react-slick 캐루셀(이미지 슬라이더) 중 가장 인기 있는 컴포넌트이다.\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>상세 이미지</h1>\r\n        <button onClick={onClose}></button>\r\n      </header>\r\n      <div>\r\n        <Slick\r\n          initialSlide={0}\r\n          afterChange={(slide) => setCurrentSlide(slide)}\r\n          infinite\r\n          arrows={false}\r\n          slidesToShow={1}\r\n          slidesToScroll={1}\r\n        >\r\n          {images.map((v) => (\r\n            <div key={v.src}>\r\n              <img src={v.src} alt={v.src} />\r\n            </div>\r\n          ))}\r\n        </Slick>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default ImagesZoom;\r\n"]},"metadata":{},"sourceType":"module"}