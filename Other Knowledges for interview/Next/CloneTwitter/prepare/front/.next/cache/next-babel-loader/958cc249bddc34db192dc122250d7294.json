{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from \"immer\";\nexport const initialState = {\n  followLoading: false,\n  // 팔로우 시도 중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도 중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도 중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그인 시도 중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도 중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉변 시도 중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: \"윈카우\",\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: \"부기초\"\n  }, {\n    nickname: \"부기초\"\n  }, {\n    nickname: \"부기초\"\n  }],\n  Followers: [{\n    nickname: \"부기초\"\n  }, {\n    nickname: \"부기초\"\n  }, {\n    nickname: \"부기초\"\n  }]\n}); // action creater: 원래 액션은 객체인데 객체로 만들면 동적으로 값을 바꾸기 힘들어서 객체를 뱉는 함수를 만든 것\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// thunk가 해 주는 일이 이것이다.(비동기 액션을 가능하게 해 줌, 한 번에 디스패치를 여러 번 할 수 있게 해 준다.)\n// saga를 쓰면 조금 더 많은 것을 해 준다. 딜레이(몇 초 뒤에 디스패치가 가능하게 한다든지...)\n// 그래서 간단한 어플을 만들 때는 thunk를 써서 비동기 액션만 사용 가능하게 해도 되는데, 그렇지 않으면 saga로 다양한 기능을 지원받으면 좋음\n// export const loginAction = (data) => {\n//   return (dispatch, getState) => {\n//     const state = getState();\n//     dispatch(loginRequestAction());\n//     axios\n//       .post(\"/api/login\")\n//       .then((res) => dispatch(loginSuccessAction(res.data)))\n//       .catch((err) => dispatch(loginFailureAction(err)));\n//   };\n// };\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case FOLLOW_REQUEST:\n      {\n        // console.log(\"reducer logged in\");\n        draft.followLoading = true;\n        draft.followError = null;\n        draft.followDone = false;\n        draft.me = action.data;\n        break;\n      }\n\n    case FOLLOW_SUCCESS:\n      {\n        // console.log(\"더미유저 체크\", dummyUser(action.data));\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n      }\n\n    case FOLLOW_FAILURE:\n      {\n        // console.log(\"logged in\");\n        draft.followLoading = false;\n        draft.followError = action.error;\n        draft.me = action.data;\n        break;\n      }\n\n    case UNFOLLOW_REQUEST:\n      {\n        // console.log(\"reducer logged in\");\n        draft.unfollowLoading = true;\n        draft.unfollowError = null;\n        draft.unfollowDone = false;\n        draft.me = action.data;\n        break;\n      }\n\n    case UNFOLLOW_SUCCESS:\n      {\n        // console.log(\"더미유저 체크\", dummyUser(action.data));\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true;\n        draft.me = draft.me.Followings.filter(v => v.id !== action.data);\n        break;\n      }\n\n    case UNFOLLOW_FAILURE:\n      {\n        // console.log(\"logged in\");\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        draft.me = action.data;\n        break;\n      }\n\n    case LOG_IN_REQUEST:\n      {\n        // console.log(\"reducer logged in\");\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        draft.me = action.data;\n        break;\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        // console.log(\"더미유저 체크\", dummyUser(action.data));\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        // console.log(\"logged in\");\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        draft.me = action.data;\n        break;\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        draft.logOutLoading = true;\n        draft.logOutError = null;\n        draft.logOutDone = false;\n        break;\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n      }\n\n    case LOG_OUT_FAILURE:\n      {\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        draft.signUpLoading = true;\n        draft.signUpError = null;\n        draft.signUpDone = false;\n        break;\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n      }\n\n    case CHANGE_NICKNAME_REQUEST:\n      {\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameError = null;\n        draft.changeNicknameDone = false;\n        break;\n      }\n\n    case CHANGE_NICKNAME_SUCCESS:\n      {\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n      }\n\n    case CHANGE_NICKNAME_FAILURE:\n      {\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      }\n\n    case ADD_POST_TO_ME:\n      {\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      }\n\n    case REMOVE_POST_OF_ME:\n      {\n        draft.me.Post.filter(v => v.id !== action.data);\n        break;\n      }\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["D:/__My_crafts/Algorithms For Coding Test/Other Knowledges for interview/Next/CloneTwitter/prepare/front/reducers/user.js"],"names":["produce","initialState","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","error","filter","v","unshift","Post"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  followLoading: false, // 팔로우 시도 중\r\n  followDone: false,\r\n  followError: null,\r\n  unfollowLoading: false, // 언팔로우 시도 중\r\n  unfollowDone: false,\r\n  unfollowError: null,\r\n  logInLoading: false, // 로그인 시도 중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그인 시도 중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, // 회원가입 시도 중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  changeNicknameLoading: false, // 닉변 시도 중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: \"윈카우\",\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [\r\n    { nickname: \"부기초\" },\r\n    { nickname: \"부기초\" },\r\n    { nickname: \"부기초\" },\r\n  ],\r\n  Followers: [\r\n    { nickname: \"부기초\" },\r\n    { nickname: \"부기초\" },\r\n    { nickname: \"부기초\" },\r\n  ],\r\n});\r\n\r\n// action creater: 원래 액션은 객체인데 객체로 만들면 동적으로 값을 바꾸기 힘들어서 객체를 뱉는 함수를 만든 것\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// thunk가 해 주는 일이 이것이다.(비동기 액션을 가능하게 해 줌, 한 번에 디스패치를 여러 번 할 수 있게 해 준다.)\r\n// saga를 쓰면 조금 더 많은 것을 해 준다. 딜레이(몇 초 뒤에 디스패치가 가능하게 한다든지...)\r\n// 그래서 간단한 어플을 만들 때는 thunk를 써서 비동기 액션만 사용 가능하게 해도 되는데, 그렇지 않으면 saga로 다양한 기능을 지원받으면 좋음\r\n// export const loginAction = (data) => {\r\n//   return (dispatch, getState) => {\r\n//     const state = getState();\r\n//     dispatch(loginRequestAction());\r\n//     axios\r\n//       .post(\"/api/login\")\r\n//       .then((res) => dispatch(loginSuccessAction(res.data)))\r\n//       .catch((err) => dispatch(loginFailureAction(err)));\r\n//   };\r\n// };\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nexport const loginRequestAction = (data) => {\r\n  return { type: LOG_IN_REQUEST, data };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return { type: LOG_OUT_REQUEST };\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case FOLLOW_REQUEST: {\r\n        // console.log(\"reducer logged in\");\r\n        draft.followLoading = true;\r\n        draft.followError = null;\r\n        draft.followDone = false;\r\n        draft.me = action.data;\r\n        break;\r\n      }\r\n      case FOLLOW_SUCCESS: {\r\n        // console.log(\"더미유저 체크\", dummyUser(action.data));\r\n        draft.followLoading = false;\r\n        draft.followDone = true;\r\n        draft.me = dummyUser(action.data);\r\n        break;\r\n      }\r\n      case FOLLOW_FAILURE: {\r\n        // console.log(\"logged in\");\r\n        draft.followLoading = false;\r\n        draft.followError = action.error;\r\n        draft.me = action.data;\r\n        break;\r\n      }\r\n      case UNFOLLOW_REQUEST: {\r\n        // console.log(\"reducer logged in\");\r\n        draft.unfollowLoading = true;\r\n        draft.unfollowError = null;\r\n        draft.unfollowDone = false;\r\n        draft.me = action.data;\r\n        break;\r\n      }\r\n      case UNFOLLOW_SUCCESS: {\r\n        // console.log(\"더미유저 체크\", dummyUser(action.data));\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowDone = true;\r\n        draft.me = draft.me.Followings.filter((v) => v.id !== action.data);\r\n        break;\r\n      }\r\n      case UNFOLLOW_FAILURE: {\r\n        // console.log(\"logged in\");\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowError = action.error;\r\n        draft.me = action.data;\r\n        break;\r\n      }\r\n      case LOG_IN_REQUEST: {\r\n        // console.log(\"reducer logged in\");\r\n        draft.logInLoading = true;\r\n        draft.logInError = null;\r\n        draft.logInDone = false;\r\n        draft.me = action.data;\r\n        break;\r\n      }\r\n      case LOG_IN_SUCCESS: {\r\n        // console.log(\"더미유저 체크\", dummyUser(action.data));\r\n        draft.logInLoading = false;\r\n        draft.logInDone = true;\r\n        draft.me = dummyUser(action.data);\r\n        break;\r\n      }\r\n      case LOG_IN_FAILURE: {\r\n        // console.log(\"logged in\");\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        draft.me = action.data;\r\n        break;\r\n      }\r\n      case LOG_OUT_REQUEST: {\r\n        draft.logOutLoading = true;\r\n        draft.logOutError = null;\r\n        draft.logOutDone = false;\r\n        break;\r\n      }\r\n      case LOG_OUT_SUCCESS: {\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      }\r\n      case LOG_OUT_FAILURE: {\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n      }\r\n      case SIGN_UP_REQUEST: {\r\n        draft.signUpLoading = true;\r\n        draft.signUpError = null;\r\n        draft.signUpDone = false;\r\n        break;\r\n      }\r\n      case SIGN_UP_SUCCESS: {\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n      }\r\n      case SIGN_UP_FAILURE: {\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n      }\r\n      case CHANGE_NICKNAME_REQUEST: {\r\n        draft.changeNicknameLoading = true;\r\n        draft.changeNicknameError = null;\r\n        draft.changeNicknameDone = false;\r\n        break;\r\n      }\r\n      case CHANGE_NICKNAME_SUCCESS: {\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n      }\r\n      case CHANGE_NICKNAME_FAILURE: {\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n      }\r\n      case ADD_POST_TO_ME: {\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n      }\r\n      case REMOVE_POST_OF_ME: {\r\n        draft.me.Post.filter((v) => v.id !== action.data);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}