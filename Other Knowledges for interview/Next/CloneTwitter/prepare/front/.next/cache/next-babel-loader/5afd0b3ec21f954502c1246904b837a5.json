{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\__My_crafts\\\\Algorithms For Coding Test\\\\Other Knowledges for interview\\\\Next\\\\CloneTwitter\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CommentForm from \"./CommentForm\";\nimport PostImages from \"./PostImages\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onClickToggle = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f95\",\n      key: \"heart\",\n      onClick: onClickToggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onClickToggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 24\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), onToggleComment && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 27\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(PostCard, \"uuDHglilef9AA2Zv/ZiuhGMvtl4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/__My_crafts/Algorithms For Coding Test/Other Knowledges for interview/Next/CloneTwitter/prepare/front/components/PostCard.js"],"names":["React","useCallback","useState","PropTypes","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","Avatar","Button","Card","Comment","List","Popover","useDispatch","useSelector","CommentForm","PostImages","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","liked","setLiked","commentFormOpened","setCommentFormOpened","onClickToggle","prev","onToggleComment","onRemovePost","type","id","state","user","me","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","comments","arrayOf","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,mBANP;AAOA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCC,IAAxC,EAA8CC,OAA9C,QAA6D,MAA7D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,kBAA0Bb,QAAQ,CAAC,KAAD,CAAlC;AAAA,MAAOsB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkDvB,QAAQ,CAAC,KAAD,CAA1D;AAAA,MAAOwB,iBAAP;AAAA,MAA0BC,oBAA1B;;AAEA,MAAMC,aAAa,GAAG3B,WAAW,CAAC,YAAM;AACtCwB,IAAAA,QAAQ,CAAC,UAACI,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAR;AACD,GAFgC,EAE9B,EAF8B,CAAjC;AAIA,MAAMC,eAAe,GAAG7B,WAAW,CAAC,YAAM;AACxC0B,IAAAA,oBAAoB,CAAC,UAACE,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAApB;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,MAAME,YAAY,GAAG9B,WAAW,CAAC,YAAM;AACrCsB,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,MAAMa,EAAE,GAAGjB,WAAW,CAAC,UAACkB,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAEf,IAAI,CAACgB,MAAL,CAAY,CAAZ,KAAkB,MAAC,UAAD;AAAY,MAAA,MAAM,EAAEhB,IAAI,CAACgB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3B;AAEE,IAAA,OAAO,EAAE,CACP,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,EAEPd,KAAK,GACH,MAAC,YAAD;AACE,MAAA,YAAY,EAAC,SADf;AAEE,MAAA,GAAG,EAAC,OAFN;AAGE,MAAA,OAAO,EAAEI,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,GAOH,MAAC,aAAD;AAAe,MAAA,GAAG,EAAC,OAAnB;AAA2B,MAAA,OAAO,EAAEA,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATK,EAWP,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAA+B,MAAA,OAAO,EAAEE,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXO,EAYP,MAAC,OAAD;AACE,MAAA,GAAG,EAAC,MADN;AAEE,MAAA,OAAO,EACL,MAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,EAAE,IAAIX,IAAI,CAACiB,IAAL,CAAUN,EAAV,KAAiBA,EAAvB,GACC,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEF,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADD,GAQC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CAZO,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmCE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAST,IAAI,CAACiB,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAT,CADV;AAEE,IAAA,KAAK,EAAElB,IAAI,CAACiB,IAAL,CAAUC,QAFnB;AAGE,IAAA,WAAW,EAAE,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAElB,IAAI,CAACmB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CADF,EA0CGX,eAAe,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAER,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AACE,IAAA,MAAM,YAAKA,IAAI,CAACoB,QAAL,CAAcC,MAAnB,8BADR;AAEE,IAAA,UAAU,EAAC,YAFb;AAGE,IAAA,UAAU,EAAErB,IAAI,CAACoB,QAHnB;AAIE,IAAA,UAAU,EAAE,oBAACE,IAAD;AAAA,aACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AACE,QAAA,MAAM,EAAEA,IAAI,CAACL,IAAL,CAAUC,QADpB;AAEE,QAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASI,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAT,CAFV;AAGE,QAAA,OAAO,EAAEI,IAAI,CAACH,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADU;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA3CJ,CADF;AAgED,CAlFD;;GAAMpB,Q;UACaN,W,EAgBNC,W;;;KAjBPK,Q;AAoFNA,QAAQ,CAACwB,SAAT,GAAqB;AACnBvB,EAAAA,IAAI,EAAEnB,SAAS,CAAC2C,KAAV,CAAgB;AACpBb,IAAAA,EAAE,EAAE9B,SAAS,CAAC4C,MADM;AAEpBR,IAAAA,IAAI,EAAEpC,SAAS,CAAC6C,MAFI;AAGpBP,IAAAA,OAAO,EAAEtC,SAAS,CAAC8C,MAHC;AAIpBC,IAAAA,SAAS,EAAE/C,SAAS,CAAC6C,MAJD;AAKpBG,IAAAA,QAAQ,EAAEhD,SAAS,CAACiD,OAAV,CAAkBjD,SAAS,CAAC6C,MAA5B,CALU;AAMpBV,IAAAA,MAAM,EAAEnC,SAAS,CAACiD,OAAV,CAAkBjD,SAAS,CAAC6C,MAA5B;AANY,GAAhB,EAOHK;AARgB,CAArB;AAWA,eAAehC,QAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  HeartTwoTone,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostImages from \"./PostImages\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const onClickToggle = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({ type: REMOVE_POST_REQUEST });\r\n  }, []);\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f95\"\r\n              key=\"heart\"\r\n              onClick={onClickToggle}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onClickToggle} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type=\"danger\" onClick={onRemovePost}>\r\n                      삭제\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {onToggleComment && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}