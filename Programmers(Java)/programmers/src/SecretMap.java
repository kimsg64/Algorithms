/*
<비밀 지도>
비밀지도
네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다.
그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다.
다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.

1. 지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 "공백"(" ") 또는 "벽"("#") 두 종류로 이루어져 있다.
2. 전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 "지도 1"과 "지도 2"라고 하자.
   지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다.
   지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.
3. "지도 1"과 "지도 2"는 각각 정수 배열로 암호화되어 있다.
4. 암호화된 배열은 지도의 각 가로줄에서 벽 부분을 1, 공백 부분을 0으로 부호화했을 때 얻어지는 이진수에 해당하는 값의 배열이다.

네오가 프로도의 비상금을 손에 넣을 수 있도록, 비밀지도의 암호를 해독하는 작업을 도와줄 프로그램을 작성하라.

<입력 형식>
입력으로 지도의 한 변 크기 n 과 2개의 정수 배열 arr1, arr2가 들어온다.

1 ≦ n ≦ 16
arr1, arr2는 길이 n인 정수 배열로 주어진다.
정수 배열의 각 원소 x를 이진수로 변환했을 때의 길이는 n 이하이다. 즉, 0 ≦ x ≦ 2n - 1을 만족한다.

<출력 형식>
원래의 비밀지도를 해독하여 '#', 공백으로 구성된 문자열 배열로 출력하라.


<풀이>
1. 들어온 배열 두 개를 이진수의 배열로 변환(주어진 수를 2로 x번 나눈 나머지가 이진수로 x번째 자리수의 수)
2. 이진수를 다시 1 = "#", 0 = " " 형태의 문자열로 변환
3. 두 배열의 같은 자리의 원소인 문자열들을 비교하여 "#" + " " = "#"로 변환
 */

public class SecretMap {
	
	public static void main(String[] args) {
		int[] arr1 = {9, 20, 28, 18, 11};
		int[] arr2 = {30, 1, 21, 17, 28};
		solution(5, arr1, arr2);
	}
	
    public static String[] solution(int n, int[] arr1, int[] arr2) {
    	String[][] strArr1 = new String[n][n];
    	String[][] strArr2 = new String[n][n];
    	String[][] mixedArr = new String[n][n];
        String[] answer = new String[n];
    	// 각 원소 돌면서
    	for(int i=0; i<n; i++) {
    		// 각 자리 글자 체크
    		for(int j=0; j<n; j++) {
    			strArr1[i][n-j-1] = arr1[i] % 2 == 0 ? " " : "#";
    			arr1[i] /= 2;
    			strArr2[i][n-j-1] = arr2[i] % 2 == 0 ? " " : "#";
    			arr2[i] /= 2;
    			
    			if(strArr1[i][n-j-1] == " " && strArr2[i][n-j-1] == " ") {
    				mixedArr[i][n-j-1] = " ";
    			} else {
    				mixedArr[i][n-j-1] = "#";
    			}
    		}
    		answer[i] = "";
    		for(int j=0; j<n; j++) {
    			answer[i] += mixedArr[i][j];
    		}
    	}
        return answer;
    }
}
