# 두 배열 A, B가 있다. 두 배열을 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수이다.
# 최대 K번의 바꿔치기 연산을 수행할 수 있는데, 배열 A의 원소 하나를 배열 B의 원소 하나와 바꾸는 것이다.
# 최종 목표는 배열 A의 모든 원소의 합이 최대가 되는 것이다.
# 이를 실현하는 프로그램을 작성하시오

# 입력 조건: 첫 번째 줄에 N, K가 공백으로 구분되어 입력된다. (1 <= N <= 100,000, 0 <= K <= N)
# 두 번째, 세 번째 줄에 각각 배열 A, B의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000보다 작은 자연수이다.
# 출력 조건: 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력한다.

# 풀이
# a, b 구분 없이 모든 수를 정렬해서 상위 n개의 값의 합을 구하는 것이 베스트 케이스
# 그러나 k만큼 바꿔치기 연산의 횟수 제한이 있으므로 이를 어떻게 할 것인가...
# 1. a는 내림차순, b는 오름차순으로 정렬
# 2. b의 모든 원소를 최대 index K까지 검사하여, 같은 인덱스의 a의 원소에 비해 크다면 바꾸기

n, k = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort(reverse=True)
for i in range(k):
    if b[i] > a[i]:
        b[i], a[i] = a[i], b[i]
    else:
        break
print(sum(a))
