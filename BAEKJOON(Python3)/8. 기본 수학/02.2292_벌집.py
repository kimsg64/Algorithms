# 위의 그림과 같이 육각형으로 이루어진 벌집이 있다.
# 그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다.
# 숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오.
# 예를 들면, 13까지는 3개, 58까지는 5개를 지난다.

# 입력 조건: 첫째 줄에 N(1 ≤ N ≤ 1,000,000,000)이 주어진다.
# 출력 조건: 입력으로 주어진 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나는지 출력한다.

# 풀이: 육각형을 둘러싼 육각형 구조이므로, [1], [2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ,18, 19], ...
# 형태로 다음 육각형이 만들어진다. 육각형의 원소의 개수는 1, 6, 12, 18 씩 늘어나고 1에서 각 그룹의 원소까지의 거리는 모두 같다.
# 각 그룹에서 제일 큰 수는 1, 7, 19, 37, 61, ... = 육각형 배열들의 길이의 합
# 거리는 d=1부터 시작해서 + 6 * index

n = int(input())
d = 1
idx = 0
while n > d + 6 * idx:
    d += 6 * idx
    idx += 1
    # print(idx, "번째 벌집", d + 6 * idx, "보다 작으면 도달하는데 필요한 방의 수는 ", idx)
print(idx+1)
